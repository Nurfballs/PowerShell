# ----------------------------------------------# Define executible locations# ----------------------------------------------$psExec = "C:\Hotline\Scripts\Powershell for XP\psexec.exe"$dotNetFramework = "C:\Hotline\Scripts\Powershell for XP\NetFx20SP1_x86.exe"$WindowsManagementFamework = "C:\Hotline\Scripts\Powershell for XP\WindowsXP-KB968930-x86-ENG.exe"Function Deploy-PowerShellToXP($ComputerName) {    $VerbosePreference = "Continue"    # ------------------------------------------------    # Pre-requisite check    # ------------------------------------------------    Write-Output "Begin Pre-requisite check"    #Make sure the remote computer is Winodws XP.    Write-Verbose "Checking Operating System Version..."    $OS = Get-WmiObject Win32_OperatingSystem -Computername $ComputerName    if ($OS.Version -notmatch "5.1")    {         Write-Error "Remote computer is not Windows XP. Exiting script."         Break;    }    #Check if PowerShell is already installed.    Write-Verbose "Checking if PowerShell already installed..."    try     {        $Registry = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey("LocalMachine", $ComputerName)        $RegKey_PowerShell = $registry.OpenSubKey("Software\Microsoft\Powershell\1")        $RegVal_PowerShell = $RegKey_PowerShell.GetValue("Install")                if ($RegVal_PowerShell -eq "1") { $PowerShellInstalled = $True }          }     catch     {        if (!$PowerShellInstalled) { Write-Output "PowerShell not installed" }    }        # If powershell installed, check which version it is    Write-Verbose "Checking PowerShell Version..."    if ($PowerShellInstalled -eq $True)    {        $Registry = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey("LocalMachine", $ComputerName)        $RegKey_PowerShell = $registry.OpenSubKey("Software\Microsoft\Powershell\1\PowerShellEngine")        $RegVal_PowerShell = $RegKey_PowerShell.GetValue("PowerShellVersion")        $PowerShellVersion = $RegVal_PowerShell                if ($PowerShellVersion -eq "2.0")        {            Write-Output "Powershell 2.0 already installed. Exiting script."            Break;        }        elseif ($PowerShellVersion -eq "")         {            Write-Verbose "Powershell appears to be installed, but the version number was unable to be determined."            Write-Verbose "Gonna try installing version 2.0 anyway."                   }    }    # ------------------------------------------------    # Install components    # ------------------------------------------------    # Install Powershell 2.0    Write-Output "Installing PowerShell 2.0..."    # Check if Service Pack 3 is installed.    Write-Verbose "Checking for Service Pack 3..."    $Registry = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey("LocalMachine", $ComputerName)    $RegKey_PowerShell = $registry.OpenSubKey("Software\Microsoft\Windows NT\CurrentVersion")    $RegVal_PowerShell = $RegKey_PowerShell.GetValue("CSDVersion")    $ServicePackVersion = $RegVal_PowerShell        if ($ServicePackVersion -notmatch "Service Pack 3")    {        Write-Error "It appears you are using Windows XP, but without Service Pack 3."        Write-Error "Please install Service Pack 3 and try again."        break;    }    Write-Verbose "Service Pack 3 installed."    #Check if .NET Framework 2.0 installed (at least SP1)    Write-Verbose "Checking for .NET Framework 2.0 SP1"    try    {        $Registry = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey("LocalMachine", $ComputerName)        $RegKey_PowerShell = $registry.OpenSubKey("Software\Microsoft\NET Framework Setup\NDP\v2.0.50727")        $RegVal_PowerShell = $RegKey_PowerShell.GetValue("SP")        $NetFrameworkVersion = $RegVal_PowerShell        if ($NetFrameworkVersion -ne "" -or $NetFrameworkVersion -ne "0")        {            Write-Verbose ".Net Framework 2.0 SP1 or greater installed"            $NETFrameworkInstalled = $True        }        else        {            Write-Verbose ".NET Framework 2.0 SP1 is not installed."            $NETFrameworkInstalled = $False        }    }    catch    {        Write-Verbose ".NET Framework 2.0 SP1 not installed."        $NETFrameworkInstalled = $False    }    # Install .NET Framework 2.0 SP1    if ($NETFrameworkInstalled -eq $False)    {        Write-Output "Installing .NET Framework 2.0 SP1..."        & $psexec /AcceptEULA \\$ComputerName -c -f $dotNetFramework /q /norestart    }    # Install Powershell 2.0    Write-Output "Installing PowerShell 2.0 ..."    & $psexec /AcceptEULA \\$ComputerName -c -f $WindowsManagementFamework /quiet /passive /norestart  }